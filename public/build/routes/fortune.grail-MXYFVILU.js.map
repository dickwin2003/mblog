{
  "version": 3,
  "sources": ["../../../app/routes/fortune.grail.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\routes\\\\\\\\fortune.grail.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\routes\\\\fortune.grail.tsx\");\n  import.meta.hot.lastModified = \"1731988265109.7842\";\n}\n// REMIX HMR END\n\nimport { redirect } from \"@remix-run/cloudflare\";\nimport { Form, useNavigation } from \"@remix-run/react\";\nimport Layout from \"~/components/Layout\";\n\n/**\n * Loader function to handle the request and return the fortune number.\n * @param {LoaderFunctionArgs} args - The loader function arguments.\n * @returns {Promise<json>} - A JSON response with the fortune number.\n */\nexport async function loader({\n  request\n}) {\n  const url = new URL(request.url);\n  const fortuneNumber = Number(url.searchParams.get(\"number\")) || 1;\n  const isBlessed = Math.random() < 0.5; // 50% \u6982\u7387\u4E3A\u5723\u676F\n\n  // \u76F4\u63A5\u91CD\u5B9A\u5411\u5230\u7ED3\u679C\u9875\u9762\u6216\u91CD\u65B0\u6C42\u7B7E\n  if (isBlessed) {\n    return redirect(`/fortune/result?number=${fortuneNumber}`);\n  } else {\n    return redirect('/fortune');\n  }\n}\n\n/**\n * Action function to handle the form submission.\n * @param {ActionFunctionArgs} args - The action function arguments.\n * @returns {Promise<redirect>} - A redirect response.\n */\nexport async function action({\n  request\n}) {\n  const formData = await request.formData();\n  const result = formData.get(\"result\");\n  const number = formData.get(\"number\");\n  if (!number || Number(number) < 1 || Number(number) > 100) {\n    return redirect('/fortune');\n  }\n  if (result === \"success\") {\n    return redirect(`/fortune/result?number=${number}`);\n  }\n  return redirect('/fortune');\n}\n\n/**\n * The FortuneGrail component.\n * @returns {JSX.Element} - The JSX element representing the component.\n */\nexport default function FortuneGrail() {\n  _s();\n  const navigation = useNavigation();\n  const isRolling = navigation.state === \"submitting\";\n  return <Layout>\n      <div className=\"max-w-2xl mx-auto px-4 py-8\">\n        <div className=\"bg-white/80 rounded-lg shadow-lg p-6 border border-red-100\">\n          <div className=\"text-center space-y-6\">\n            <div className=\"py-8 space-y-8\">\n              <div className=\"space-y-4\">\n                <h1 className=\"text-3xl font-bold text-red-800\">\u64F2\u8056\u676F</h1>\n              </div>\n\n              <div className=\"bg-red-50 p-8 rounded-lg space-y-6\">\n                <p className=\"text-xl text-gray-700\">\n                  \u8ACB\u8654\u8AA0\u7948\u79B1\u5F8C\u9078\u64C7\u7D50\u679C\n                </p>\n                <div className=\"flex justify-center gap-4\">\n                  <Form method=\"post\" className=\"contents\">\n                    <input type=\"hidden\" name=\"result\" value=\"success\" />\n                    <button type=\"submit\" disabled={isRolling} className=\"px-8 py-3 text-lg font-medium text-white bg-gradient-to-r from-red-800 to-red-700 rounded-lg shadow-lg hover:from-red-700 hover:to-red-600 transition-colors duration-300 disabled:opacity-50\">\n                      {isRolling ? \"\u64F2\u676F\u4E2D...\" : \"\u8056\u676F\"}\n                    </button>\n                  </Form>\n                  <Form method=\"post\" className=\"contents\">\n                    <input type=\"hidden\" name=\"result\" value=\"fail\" />\n                    <button type=\"submit\" disabled={isRolling} className=\"px-8 py-3 text-lg font-medium text-white bg-gradient-to-r from-gray-800 to-gray-700 rounded-lg shadow-lg hover:from-gray-700 hover:to-gray-600 transition-colors duration-300 disabled:opacity-50\">\n                      {isRolling ? \"\u64F2\u676F\u4E2D...\" : \"\u9670\u676F\"}\n                    </button>\n                  </Form>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Layout>;\n}\n_s(FortuneGrail, \"I2WaJhUM5KV32aS1+j3KKeVsgyA=\", false, function () {\n  return [useNavigation];\n});\n_c = FortuneGrail;\nvar _c;\n$RefreshReg$(_c, \"FortuneGrail\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAqBA,wBAAyB;AA0DT;AA9EhB,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,yCAA2C,EAAE;AAAA,EACtF;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAgC;AAChC,cAAY,IAAI,eAAe;AACjC;AAmDe,SAAR,eAAgC;AACrC,KAAG;AACH,QAAM,aAAa,cAAc;AACjC,QAAM,YAAY,WAAW,UAAU;AACvC,SAAO,mDAAC,UACJ,6DAAC,SAAI,WAAU,+BACb,6DAAC,SAAI,WAAU,8DACb,6DAAC,SAAI,WAAU,yBACb,6DAAC,SAAI,WAAU,kBACb;AAAA,uDAAC,SAAI,WAAU,aACb,6DAAC,QAAG,WAAU,mCAAkC,kCAAhD;AAAA;AAAA;AAAA;AAAA,WAAmD,KADrD;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA,IAEA,mDAAC,SAAI,WAAU,sCACb;AAAA,yDAAC,OAAE,WAAU,yBAAwB,4EAArC;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,MACA,mDAAC,SAAI,WAAU,6BACb;AAAA,2DAAC,QAAK,QAAO,QAAO,WAAU,YAC5B;AAAA,6DAAC,WAAM,MAAK,UAAS,MAAK,UAAS,OAAM,aAAzC;AAAA;AAAA;AAAA;AAAA,iBAAmD;AAAA,UACnD,mDAAC,YAAO,MAAK,UAAS,UAAU,WAAW,WAAU,iMAClD,sBAAY,0BAAW,kBAD1B;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA,aAJF;AAAA;AAAA;AAAA;AAAA,eAKA;AAAA,QACA,mDAAC,QAAK,QAAO,QAAO,WAAU,YAC5B;AAAA,6DAAC,WAAM,MAAK,UAAS,MAAK,UAAS,OAAM,UAAzC;AAAA;AAAA;AAAA;AAAA,iBAAgD;AAAA,UAChD,mDAAC,YAAO,MAAK,UAAS,UAAU,WAAW,WAAU,qMAClD,sBAAY,0BAAW,kBAD1B;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA,aAJF;AAAA;AAAA;AAAA;AAAA,eAKA;AAAA,WAZF;AAAA;AAAA;AAAA;AAAA,aAaA;AAAA,SAjBF;AAAA;AAAA;AAAA;AAAA,WAkBA;AAAA,OAvBF;AAAA;AAAA;AAAA;AAAA,SAwBA,KAzBF;AAAA;AAAA;AAAA;AAAA,SA0BA,KA3BF;AAAA;AAAA;AAAA;AAAA,SA4BA,KA7BF;AAAA;AAAA;AAAA;AAAA,SA8BA,KA/BG;AAAA;AAAA;AAAA;AAAA,SAgCL;AACJ;AACA,GAAG,cAAc,gCAAgC,OAAO,WAAY;AAClE,SAAO,CAAC,aAAa;AACvB,CAAC;AACD,KAAK;AACL,IAAI;AACJ,aAAa,IAAI,cAAc;AAE/B,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
