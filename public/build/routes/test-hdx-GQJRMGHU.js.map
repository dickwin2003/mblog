{
  "version": 3,
  "sources": ["empty-module:../models/hdx.server", "../../../app/routes/test-hdx.tsx"],
  "sourcesContent": ["module.exports = {};", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\routes\\\\\\\\test-hdx.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\routes\\\\test-hdx.tsx\");\n  import.meta.hot.lastModified = \"1731922368630.719\";\n}\n// REMIX HMR END\n\nimport { json } from '@remix-run/node';\nimport { useLoaderData, Form } from '@remix-run/react';\nimport { createHDX, listHDX } from '../models/hdx.server';\nexport const loader = async ({\n  request,\n  context\n}) => {\n  const {\n    env\n  } = context;\n  if (!env?.DB) {\n    throw new Error('Database is not available in context');\n  }\n  try {\n    const url = new URL(request.url);\n    const page = parseInt(url.searchParams.get('page') || '1');\n    const result = await listHDX(env.DB, {\n      page,\n      limit: 10\n    });\n    return json(result);\n  } catch (error) {\n    console.error('Failed to load HDX items:', error);\n    return json({\n      items: [],\n      total: 0,\n      error: error instanceof Error ? error.message : String(error)\n    });\n  }\n};\nexport const action = async ({\n  request,\n  context\n}) => {\n  const {\n    env\n  } = context;\n  if (!env?.DB) {\n    throw new Error('Database is not available in context');\n  }\n  try {\n    const formData = await request.formData();\n    const title = formData.get('title');\n    const content = formData.get('content');\n    const author = formData.get('author');\n    const category = formData.get('category');\n    const tags = formData.get('tags');\n    if (!title || !content) {\n      throw new Error('Title and content are required');\n    }\n    const success = await createHDX(env.DB, {\n      title,\n      content,\n      author,\n      status: 1,\n      category,\n      tags\n    });\n    return json({\n      success\n    });\n  } catch (error) {\n    console.error('Failed to create HDX:', error);\n    return json({\n      success: false,\n      error: error instanceof Error ? error.message : String(error)\n    });\n  }\n};\nexport default function TestHDX() {\n  _s();\n  const {\n    items,\n    total,\n    error\n  } = useLoaderData();\n  return <div className=\"p-4\">\n            <h1 className=\"text-2xl font-bold mb-4\">\u6D4B\u8BD5 HDX \u6570\u636E\u5E93\u64CD\u4F5C</h1>\n            \n            {error && <div className=\"bg-red-100 p-4 rounded mb-4\">\n                    <p className=\"text-red-600\">{error}</p>\n                </div>}\n\n            <div className=\"mb-8\">\n                <h2 className=\"text-xl font-bold mb-4\">\u6DFB\u52A0\u65B0\u6761\u76EE</h2>\n                <Form method=\"post\" className=\"space-y-4\">\n                    <div>\n                        <label className=\"block mb-2\">\u6807\u9898\uFF1A</label>\n                        <input type=\"text\" name=\"title\" className=\"w-full p-2 border rounded\" required />\n                    </div>\n                    <div>\n                        <label className=\"block mb-2\">\u5185\u5BB9\uFF1A</label>\n                        <textarea name=\"content\" className=\"w-full p-2 border rounded\" rows={4} required />\n                    </div>\n                    <div>\n                        <label className=\"block mb-2\">\u4F5C\u8005\uFF1A</label>\n                        <input type=\"text\" name=\"author\" className=\"w-full p-2 border rounded\" />\n                    </div>\n                    <div>\n                        <label className=\"block mb-2\">\u5206\u7C7B\uFF1A</label>\n                        <input type=\"text\" name=\"category\" className=\"w-full p-2 border rounded\" />\n                    </div>\n                    <div>\n                        <label className=\"block mb-2\">\u6807\u7B7E\uFF1A</label>\n                        <input type=\"text\" name=\"tags\" className=\"w-full p-2 border rounded\" placeholder=\"\u7528\u9017\u53F7\u5206\u9694\u591A\u4E2A\u6807\u7B7E\" />\n                    </div>\n                    <button type=\"submit\" className=\"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600\">\n                        \u63D0\u4EA4\n                    </button>\n                </Form>\n            </div>\n\n            <div>\n                <h2 className=\"text-xl font-bold mb-4\">\u73B0\u6709\u6761\u76EE (\u603B\u8BA1: {total})</h2>\n                <div className=\"space-y-4\">\n                    {items.map(item => <div key={item.id} className=\"border p-4 rounded\">\n                            <h3 className=\"font-bold\">{item.title}</h3>\n                            <p className=\"text-gray-600 mt-2\">{item.content}</p>\n                            <div className=\"mt-2 text-sm text-gray-500\">\n                                <span>\u4F5C\u8005: {item.author || '\u533F\u540D'}</span>\n                                {item.category && <span className=\"ml-4\">\u5206\u7C7B: {item.category}</span>}\n                                {item.tags && <span className=\"ml-4\">\u6807\u7B7E: {item.tags}</span>}\n                            </div>\n                            <div className=\"mt-2 text-sm text-gray-500\">\n                                <span>\u6D4F\u89C8: {item.views}</span>\n                                <span className=\"ml-4\">\u70B9\u8D5E: {item.likes}</span>\n                                <span className=\"ml-4\">\u521B\u5EFA\u65F6\u95F4: {new Date(item.created_at).toLocaleString()}</span>\n                            </div>\n                        </div>)}\n                </div>\n            </div>\n        </div>;\n}\n_s(TestHDX, \"PDaCWhY4dkkVd6TXfMYvh3I7v54=\", false, function () {\n  return [useLoaderData];\n});\n_c = TestHDX;\nvar _c;\n$RefreshReg$(_c, \"TestHDX\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": []
}
